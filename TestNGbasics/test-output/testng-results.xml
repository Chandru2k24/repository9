<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-03-26T16:11:42 IST" name="Default suite" finished-at="2025-03-26T16:12:13 IST" duration-ms="31141">
    <groups>
    </groups>
    <test started-at="2025-03-26T16:11:42 IST" name="Default test" finished-at="2025-03-26T16:12:13 IST" duration-ms="31141">
      <class name="Dataproviders.TestClass">
        <test-method is-config="true" signature="setup()[pri:0, instance:Dataproviders.TestClass@1bb5a082]" started-at="2025-03-26T16:11:42 IST" name="setup" finished-at="2025-03-26T16:11:53 IST" duration-ms="10682" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:Dataproviders.TestClass@1bb5a082]" started-at="2025-03-26T16:11:42 IST" name="setup" finished-at="2025-03-26T16:11:53 IST" duration-ms="10682" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:Dataproviders.TestClass@1bb5a082]" started-at="2025-03-26T16:11:42 IST" name="setup" finished-at="2025-03-26T16:11:54 IST" duration-ms="12230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="search(java.lang.String)[pri:0, instance:Dataproviders.TestClass@1bb5a082]" started-at="2025-03-26T16:11:53 IST" name="search" data-provider="excelData" finished-at="2025-03-26T16:12:13 IST" duration-ms="19567" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TestNG]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- search -->
        <test-method signature="search(java.lang.String)[pri:0, instance:Dataproviders.TestClass@1bb5a082]" started-at="2025-03-26T16:11:53 IST" name="search" data-provider="excelData" finished-at="2025-03-26T16:12:10 IST" duration-ms="16807" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[selenium ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- search -->
        <test-method signature="search(java.lang.String)[pri:0, instance:Dataproviders.TestClass@1bb5a082]" started-at="2025-03-26T16:11:54 IST" name="search" data-provider="excelData" finished-at="2025-03-26T16:12:03 IST" duration-ms="8495" status="FAIL">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Keys to send should be a not null CharSequence]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:96)
at Dataproviders.TestClass.search(TestClass.java:41)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:81)
at org.testng.internal.thread.Async$AsyncTask.run(Async.java:34)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- search -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Dataproviders.TestClass@1bb5a082]" started-at="2025-03-26T16:12:03 IST" name="afterMethod" finished-at="2025-03-26T16:12:03 IST" duration-ms="324" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Dataproviders.TestClass@1bb5a082]" started-at="2025-03-26T16:12:10 IST" name="afterMethod" finished-at="2025-03-26T16:12:10 IST" duration-ms="188" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Dataproviders.TestClass@1bb5a082]" started-at="2025-03-26T16:12:13 IST" name="afterMethod" finished-at="2025-03-26T16:12:13 IST" duration-ms="284" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- Dataproviders.TestClass -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
